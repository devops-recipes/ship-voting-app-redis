jobs:
# jobs for the provision-gke-kubernetes-cluster app

  - name: build_frontend_image
    type: runSh
    steps:
      - IN: twotier_app_gitRepo
        switch: off
      - IN: gke_cliConfig
      - OUT: front_img
      - TASK:
        # invoke a script that provisions the GKE cluster named test-cluster
        - script: |
            pushd $TWOTIER_APP_GITREPO_PATH/gitRepo/vote
            docker build -t gcr.io/fair-future-183201/vote:master.$BUILD_NUMBER .
            gcloud docker -- push gcr.io/fair-future-183201/vote
            shipctl put_resource_state front_img "versionName" "gcr.io/fair-future-183201/vote:master.$BUILD_NUMBER"
            popd

  - name: deploy_test_cluster
    type: runSh
    steps:
      - IN: twotier_app_gitRepo
        switch: off
      - IN: gke_cliConfig
      - IN: front_img
      - IN: back_img
      - IN: test_cluster_params
      - IN: kube_cluster
      - IN: teststate
      - IN: relstate
      - OUT: relstate
      - OUT: teststate
      - TASK:
        # invoke a script that provisions the GKE cluster named test-cluster
        - script: |
            pushd $TWOTIER_APP_GITREPO_PATH/gitRepo
            export VOTE_FRONT_LABEL_PARAM="${VOTE_FRONT_LABEL_PARAM}"
            export VOTE_BACK_LABEL_PARAM="${VOTE_BACK_LABEL_PARAM}"
            shippable_replace ./twotierapp.yml.template

            cat ./twotierapp.yml.template
            cp ./twotierapp.yml.template ./release.template.yml

            shipctl refresh_file_to_out_path ./release.template.yml relstate

            unset VOTE_FRONT_LABEL_PARAM
            unset VOTE_BACK_LABEL_PARAM
            export VOTE_FRONT_LABEL_PARAM=$VOTE_FRONT_LABEL
            export VOTE_BACK_LABEL_PARAM=$VOTE_BACK_LABEL

            shippable_replace ./release.template.yml
            cat ./release.template.yml
            cp ./release.template.yml ./test_deploy_spec.yml
            shipctl refresh_file_to_out_path ./test_deploy_spec.yml teststate

            gcloud container clusters get-credentials $KUBE_CLUSTER_POINTER_SOURCENAME --zone $KUBE_CLUSTER_POINTER_REGION
            $response=$(kubectl create -f ./test_deploy_spec.yml)
            echo "kubectl command response is "$response
            popd
